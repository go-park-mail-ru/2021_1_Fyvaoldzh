name: Docker Build Services

on:
  push:
    branches:
      #- master
      - deploy
  pull_request:
    branches:
      #- master
      - deploy

jobs:
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.26

 # test:
  #  runs-on: ubuntu-latest
  #  needs: golangci
   # steps:
   #   - name: Install Go
   #     uses: actions/setup-go@v2
   #     with:
   #       go-version: '1.13.x'
    #  - name: Checkout code
    #    uses: actions/checkout@v2
    #  - name: Test
    #    run: go test ./...

  build:
    runs-on: ubuntu-latest
   # needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      #    билдим имейджи для всех сервисов
      - name: Build Docker image for main server
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8} -f Dockerfile .
      - name: Build Docker image for auth service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8} -f Dockerfile_auth .
      - name: Build Docker image for subscription service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sub:${GITHUB_SHA::8} -f Dockerfile_sub .
      - name: Build Docker image for chat service
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/chat:${GITHUB_SHA::8} -f Dockerfile_chat .
      #      пушим все , что можем в докерхаб
      - name: Push the image for main
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}
      - name: Push the image for auth service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
      - name: Push the image for subscription service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/sub:${GITHUB_SHA::8}
      - name: Push the image for chat service
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chat:${GITHUB_SHA::8}

  deploy:
    if: contains(github.ref, 'deploy')
    runs-on: ubuntu-latest
    needs: build
    steps:
      # чистим чистим чистим
      - name: remove docker containers
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker stop $(docker ps -a)
            sudo docker rm $(docker ps -a)
      #      на серверке подтягиваем все наши уже сбилдженные контейнеры
      - name: pull docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sub:${GITHUB_SHA::8}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chat:${GITHUB_SHA::8}
      - name: deploy docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker run -d --network="host" -p 3003:3003 --name chat ${{ secrets.DOCKERHUB_USERNAME }}/chat:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -p 3002:3002 --name sub ${{ secrets.DOCKERHUB_USERNAME }}/sub:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -p 3001:3001 --name auth ${{ secrets.DOCKERHUB_USERNAME }}/auth:${GITHUB_SHA::8}
            sudo docker run -d --network="host" -v /./go/src/github.com/go-park-mail-ru/2021_1_Fyvaoldzh/public:/./go/src/github.com/go-park-mail-ru/2021_1_Fyvaoldzh/public  -p 3000:3000 --name main ${{ secrets.DOCKERHUB_USERNAME }}/main:${GITHUB_SHA::8}
